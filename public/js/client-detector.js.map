{
  "version": 3,
  "sources": ["../../src/core/client-detector.ts"],
  "sourcesContent": ["import { Position } from '../types';\n\ninterface GameWindow {\n    title: string;\n    position: Position;\n    dimensions: {\n        width: number;\n        height: number;\n    };\n}\n\nexport class GameClientDetector {\n    private static readonly CLIENT_TITLE = \"2004Scape\";\n    private static readonly DEFAULT_CLIENT_SIZE = {\n        width: 765,\n        height: 503\n    };\n\n    private gameWindow: GameWindow | null = null;\n    private isClientFound: boolean = false;\n    private checkInterval: NodeJS.Timeout | null = null;\n\n    constructor() {\n        this.startDetection();\n    }\n\n    public startDetection(): void {\n        if (this.checkInterval) {\n            return;\n        }\n\n        console.log('Starting game client detection...');\n        this.checkInterval = setInterval(() => this.detectClient(), 1000);\n    }\n\n    public stopDetection(): void {\n        if (this.checkInterval) {\n            clearInterval(this.checkInterval);\n            this.checkInterval = null;\n        }\n    }\n\n    private detectClient(): void {\n        try {\n            // Check if we're in a browser environment\n            if (typeof window !== 'undefined') {\n                const gameCanvas = document.querySelector('canvas');\n                if (gameCanvas && this.isGameClient(gameCanvas)) {\n                    this.isClientFound = true;\n                    this.gameWindow = {\n                        title: document.title,\n                        position: {\n                            x: window.screenX,\n                            y: window.screenY\n                        },\n                        dimensions: {\n                            width: gameCanvas.width,\n                            height: gameCanvas.height\n                        }\n                    };\n                    console.log('2004Scape client detected:', this.gameWindow);\n                    this.stopDetection();\n                    this.emitClientFound();\n                }\n            }\n        } catch (error) {\n            console.error('Error detecting game client:', error);\n        }\n    }\n\n    private isGameClient(canvas: HTMLCanvasElement): boolean {\n        // Check if canvas dimensions match the game client\n        const matchesDimensions = \n            canvas.width === GameClientDetector.DEFAULT_CLIENT_SIZE.width &&\n            canvas.height === GameClientDetector.DEFAULT_CLIENT_SIZE.height;\n\n        // Check if title contains 2004Scape\n        const matchesTitle = document.title.includes(GameClientDetector.CLIENT_TITLE);\n\n        // Check for game-specific elements\n        const hasGameElements = this.checkForGameElements();\n\n        return matchesDimensions && matchesTitle && hasGameElements;\n    }\n\n    private checkForGameElements(): boolean {\n        // Check for specific game UI elements\n        const hasGameInterface = document.querySelector('#game-interface') !== null;\n        const hasMinimapArea = document.querySelector('#minimap-area') !== null;\n        const hasChatbox = document.querySelector('#chatbox-area') !== null;\n\n        // Check for game-specific URLs or resources\n        const isGameDomain = window.location.hostname.includes('2004.lostcity.rs');\n\n        return hasGameInterface || hasMinimapArea || hasChatbox || isGameDomain;\n    }\n\n    private emitClientFound(): void {\n        const event = new CustomEvent('gameClientFound', {\n            detail: this.gameWindow\n        });\n        window.dispatchEvent(event);\n    }\n\n    public isClientDetected(): boolean {\n        return this.isClientFound;\n    }\n\n    public getGameWindow(): GameWindow | null {\n        return this.gameWindow;\n    }\n\n    public async waitForClient(timeout: number = 30000): Promise<GameWindow> {\n        return new Promise((resolve, reject) => {\n            if (this.isClientFound && this.gameWindow) {\n                resolve(this.gameWindow);\n                return;\n            }\n\n            const timeoutId = setTimeout(() => {\n                this.stopDetection();\n                reject(new Error('Game client detection timed out'));\n            }, timeout);\n\n            window.addEventListener('gameClientFound', ((event: CustomEvent) => {\n                clearTimeout(timeoutId);\n                resolve(event.detail);\n            }) as EventListener);\n\n            this.startDetection();\n        });\n    }\n}\n"],
  "mappings": ";AAWO,IAAM,sBAAN,MAAM,oBAAmB;AAAA,EAW5B,cAAc;AAJd,SAAQ,aAAgC;AACxC,SAAQ,gBAAyB;AACjC,SAAQ,gBAAuC;AAG3C,SAAK,eAAe;AAAA,EACxB;AAAA,EAEO,iBAAuB;AAC1B,QAAI,KAAK,eAAe;AACpB;AAAA,IACJ;AAEA,YAAQ,IAAI,mCAAmC;AAC/C,SAAK,gBAAgB,YAAY,MAAM,KAAK,aAAa,GAAG,GAAI;AAAA,EACpE;AAAA,EAEO,gBAAsB;AACzB,QAAI,KAAK,eAAe;AACpB,oBAAc,KAAK,aAAa;AAChC,WAAK,gBAAgB;AAAA,IACzB;AAAA,EACJ;AAAA,EAEQ,eAAqB;AACzB,QAAI;AAEA,UAAI,OAAO,WAAW,aAAa;AAC/B,cAAM,aAAa,SAAS,cAAc,QAAQ;AAClD,YAAI,cAAc,KAAK,aAAa,UAAU,GAAG;AAC7C,eAAK,gBAAgB;AACrB,eAAK,aAAa;AAAA,YACd,OAAO,SAAS;AAAA,YAChB,UAAU;AAAA,cACN,GAAG,OAAO;AAAA,cACV,GAAG,OAAO;AAAA,YACd;AAAA,YACA,YAAY;AAAA,cACR,OAAO,WAAW;AAAA,cAClB,QAAQ,WAAW;AAAA,YACvB;AAAA,UACJ;AACA,kBAAQ,IAAI,8BAA8B,KAAK,UAAU;AACzD,eAAK,cAAc;AACnB,eAAK,gBAAgB;AAAA,QACzB;AAAA,MACJ;AAAA,IACJ,SAAS,OAAO;AACZ,cAAQ,MAAM,gCAAgC,KAAK;AAAA,IACvD;AAAA,EACJ;AAAA,EAEQ,aAAa,QAAoC;AAErD,UAAM,oBACF,OAAO,UAAU,oBAAmB,oBAAoB,SACxD,OAAO,WAAW,oBAAmB,oBAAoB;AAG7D,UAAM,eAAe,SAAS,MAAM,SAAS,oBAAmB,YAAY;AAG5E,UAAM,kBAAkB,KAAK,qBAAqB;AAElD,WAAO,qBAAqB,gBAAgB;AAAA,EAChD;AAAA,EAEQ,uBAAgC;AAEpC,UAAM,mBAAmB,SAAS,cAAc,iBAAiB,MAAM;AACvE,UAAM,iBAAiB,SAAS,cAAc,eAAe,MAAM;AACnE,UAAM,aAAa,SAAS,cAAc,eAAe,MAAM;AAG/D,UAAM,eAAe,OAAO,SAAS,SAAS,SAAS,kBAAkB;AAEzE,WAAO,oBAAoB,kBAAkB,cAAc;AAAA,EAC/D;AAAA,EAEQ,kBAAwB;AAC5B,UAAM,QAAQ,IAAI,YAAY,mBAAmB;AAAA,MAC7C,QAAQ,KAAK;AAAA,IACjB,CAAC;AACD,WAAO,cAAc,KAAK;AAAA,EAC9B;AAAA,EAEO,mBAA4B;AAC/B,WAAO,KAAK;AAAA,EAChB;AAAA,EAEO,gBAAmC;AACtC,WAAO,KAAK;AAAA,EAChB;AAAA,EAEA,MAAa,cAAc,UAAkB,KAA4B;AACrE,WAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACpC,UAAI,KAAK,iBAAiB,KAAK,YAAY;AACvC,gBAAQ,KAAK,UAAU;AACvB;AAAA,MACJ;AAEA,YAAM,YAAY,WAAW,MAAM;AAC/B,aAAK,cAAc;AACnB,eAAO,IAAI,MAAM,iCAAiC,CAAC;AAAA,MACvD,GAAG,OAAO;AAEV,aAAO,iBAAiB,mBAAoB,CAAC,UAAuB;AAChE,qBAAa,SAAS;AACtB,gBAAQ,MAAM,MAAM;AAAA,MACxB,CAAmB;AAEnB,WAAK,eAAe;AAAA,IACxB,CAAC;AAAA,EACL;AACJ;AAzHa,oBACe,eAAe;AAD9B,oBAEe,sBAAsB;AAAA,EAC1C,OAAO;AAAA,EACP,QAAQ;AACZ;AALG,IAAM,qBAAN;",
  "names": []
}
