{
  "version": 3,
  "sources": ["../../../src/core/chat.ts"],
  "sourcesContent": ["export class ChatSystem {\n    private readonly noobPhrases = [\n        \"How do I train combat?\",\n        \"Where can I find chickens?\",\n        \"Anyone want to be friends?\",\n        \"I just started playing!\",\n        \"How do I make money?\",\n        \"This game is fun!\",\n        \"Can someone help me?\",\n        \"Where can I buy a sword?\",\n        \"How do I level up fast?\",\n        \"What should I do next?\"\n    ];\n\n    private readonly greetings = [\n        \"Hi!\",\n        \"Hello!\",\n        \"Hey there!\",\n        \"Sup!\",\n        \"Hi everyone!\"\n    ];\n\n    private readonly responses = [\n        \"Thanks for the help!\",\n        \"Oh cool, I didn't know that!\",\n        \"I'm still learning the game\",\n        \"This is my first time playing\",\n        \"That's awesome!\"\n    ];\n\n    private readonly questions = [\n        \"What level are you?\",\n        \"How long have you been playing?\",\n        \"What's the best way to make money?\",\n        \"Where should I train?\",\n        \"Can you show me around?\"\n    ];\n\n    private lastMessageTime: number = 0;\n    private readonly MESSAGE_COOLDOWN: number = 5000; // 5 seconds cooldown between messages\n\n    public generateGreeting(): string {\n        return this.getRandomPhrase(this.greetings);\n    }\n\n    public generateNoobChat(): string {\n        return this.getRandomPhrase(this.noobPhrases);\n    }\n\n    public generateResponse(): string {\n        return this.getRandomPhrase(this.responses);\n    }\n\n    public generateQuestion(): string {\n        return this.getRandomPhrase(this.questions);\n    }\n\n    public async sendMessage(message: string): Promise<void> {\n        const currentTime = Date.now();\n        if (currentTime - this.lastMessageTime >= this.MESSAGE_COOLDOWN) {\n            console.log(`[BOT] ${message}`);\n            this.lastMessageTime = currentTime;\n        }\n    }\n\n    public async handlePlayerDetected(): Promise<void> {\n        // 30% chance to initiate conversation when seeing another player\n        if (Math.random() < 0.3) {\n            const messageType = Math.random();\n            let message: string;\n\n            if (messageType < 0.3) {\n                message = this.generateGreeting();\n            } else if (messageType < 0.6) {\n                message = this.generateQuestion();\n            } else {\n                message = this.generateNoobChat();\n            }\n\n            await this.sendMessage(message);\n        }\n    }\n\n    private getRandomPhrase(phrases: string[]): string {\n        const index = Math.floor(Math.random() * phrases.length);\n        return phrases[index];\n    }\n}\n"],
  "mappings": ";AAAO,IAAM,aAAN,MAAiB;AAAA,EAAjB;AACH,SAAiB,cAAc;AAAA,MAC3B;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ;AAEA,SAAiB,YAAY;AAAA,MACzB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ;AAEA,SAAiB,YAAY;AAAA,MACzB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ;AAEA,SAAiB,YAAY;AAAA,MACzB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ;AAEA,SAAQ,kBAA0B;AAClC,SAAiB,mBAA2B;AAAA;AAAA;AAAA,EAErC,mBAA2B;AAC9B,WAAO,KAAK,gBAAgB,KAAK,SAAS;AAAA,EAC9C;AAAA,EAEO,mBAA2B;AAC9B,WAAO,KAAK,gBAAgB,KAAK,WAAW;AAAA,EAChD;AAAA,EAEO,mBAA2B;AAC9B,WAAO,KAAK,gBAAgB,KAAK,SAAS;AAAA,EAC9C;AAAA,EAEO,mBAA2B;AAC9B,WAAO,KAAK,gBAAgB,KAAK,SAAS;AAAA,EAC9C;AAAA,EAEA,MAAa,YAAY,SAAgC;AACrD,UAAM,cAAc,KAAK,IAAI;AAC7B,QAAI,cAAc,KAAK,mBAAmB,KAAK,kBAAkB;AAC7D,cAAQ,IAAI,SAAS,OAAO,EAAE;AAC9B,WAAK,kBAAkB;AAAA,IAC3B;AAAA,EACJ;AAAA,EAEA,MAAa,uBAAsC;AAE/C,QAAI,KAAK,OAAO,IAAI,KAAK;AACrB,YAAM,cAAc,KAAK,OAAO;AAChC,UAAI;AAEJ,UAAI,cAAc,KAAK;AACnB,kBAAU,KAAK,iBAAiB;AAAA,MACpC,WAAW,cAAc,KAAK;AAC1B,kBAAU,KAAK,iBAAiB;AAAA,MACpC,OAAO;AACH,kBAAU,KAAK,iBAAiB;AAAA,MACpC;AAEA,YAAM,KAAK,YAAY,OAAO;AAAA,IAClC;AAAA,EACJ;AAAA,EAEQ,gBAAgB,SAA2B;AAC/C,UAAM,QAAQ,KAAK,MAAM,KAAK,OAAO,IAAI,QAAQ,MAAM;AACvD,WAAO,QAAQ,KAAK;AAAA,EACxB;AACJ;",
  "names": []
}
